apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatbot-api
  labels:
    app: chatbot-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: chatbot-api
  template:
    metadata:
      labels:
        app: chatbot-api
    spec:
      containers:
      - name: api
        image: ${DOCKER_REGISTRY}/chatbot-api:latest
        ports:
        - containerPort: 8000
        env:
        - name: API_HOST
          value: "0.0.0.0"
        - name: API_PORT
          value: "8000"
        - name: DEBUG
          value: "False"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: chatbot-config
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: chatbot-config
              key: db_port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: chatbot-config
              key: db_name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: chatbot-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: chatbot-secrets
              key: db_password
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: chatbot-config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: chatbot-config
              key: redis_port
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: chatbot-secrets
              key: jwt_secret
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: chatbot-secrets
              key: openai_api_key
        - name: ELEVENLABS_API_KEY
          valueFrom:
            secretKeyRef:
              name: chatbot-secrets
              key: elevenlabs_api_key
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: chatbot-api-service
spec:
  selector:
    app: chatbot-api
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP
